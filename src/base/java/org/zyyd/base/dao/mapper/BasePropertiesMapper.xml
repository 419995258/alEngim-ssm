<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zyyd.base.dao.BasePropertiesMapper">
  <resultMap id="BaseResultMap" type="org.zyyd.base.entity.BaseProperties">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="PID" jdbcType="VARCHAR" property="pid" />
    <result column="PROPERTY_KEY" jdbcType="VARCHAR" property="propertyKey" />
    <result column="PROPERTY_VALUE" jdbcType="VARCHAR" property="propertyValue" />
    <result column="PROPERTY_DESC" jdbcType="VARCHAR" property="propertyDesc" />
    <result column="GROUP_KEY" jdbcType="VARCHAR" property="groupKey" />
    <result column="SEQ_NO" jdbcType="INTEGER" property="seqNo" />
    <result column="CRE_TIME" jdbcType="DATE" property="creTime" />
    <result column="CRE_USER" jdbcType="VARCHAR" property="creUser" />
    <result column="MOD_TIME" jdbcType="DATE" property="modTime" />
    <result column="MOD_USER" jdbcType="VARCHAR" property="modUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    PID, PROPERTY_KEY, PROPERTY_VALUE, PROPERTY_DESC, GROUP_KEY, SEQ_NO, CRE_TIME, CRE_USER, 
    MOD_TIME, MOD_USER
  </sql>
  <select id="selectByExample" parameterType="org.zyyd.base.entity.BasePropertiesExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_properties
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from base_properties
    where PID = #{pid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from base_properties
    where PID = #{pid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.zyyd.base.entity.BasePropertiesExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from base_properties
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.zyyd.base.entity.BaseProperties">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into base_properties (PID, PROPERTY_KEY, PROPERTY_VALUE, 
      PROPERTY_DESC, GROUP_KEY, SEQ_NO, 
      CRE_TIME, CRE_USER, MOD_TIME, 
      MOD_USER)
    values (#{pid,jdbcType=VARCHAR}, #{propertyKey,jdbcType=VARCHAR}, #{propertyValue,jdbcType=VARCHAR}, 
      #{propertyDesc,jdbcType=VARCHAR}, #{groupKey,jdbcType=VARCHAR}, #{seqNo,jdbcType=INTEGER}, 
      #{creTime,jdbcType=DATE}, #{creUser,jdbcType=VARCHAR}, #{modTime,jdbcType=DATE}, 
      #{modUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.zyyd.base.entity.BaseProperties">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into base_properties
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        PID,
      </if>
      <if test="propertyKey != null">
        PROPERTY_KEY,
      </if>
      <if test="propertyValue != null">
        PROPERTY_VALUE,
      </if>
      <if test="propertyDesc != null">
        PROPERTY_DESC,
      </if>
      <if test="groupKey != null">
        GROUP_KEY,
      </if>
      <if test="seqNo != null">
        SEQ_NO,
      </if>
      <if test="creTime != null">
        CRE_TIME,
      </if>
      <if test="creUser != null">
        CRE_USER,
      </if>
      <if test="modTime != null">
        MOD_TIME,
      </if>
      <if test="modUser != null">
        MOD_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="propertyKey != null">
        #{propertyKey,jdbcType=VARCHAR},
      </if>
      <if test="propertyValue != null">
        #{propertyValue,jdbcType=VARCHAR},
      </if>
      <if test="propertyDesc != null">
        #{propertyDesc,jdbcType=VARCHAR},
      </if>
      <if test="groupKey != null">
        #{groupKey,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="creTime != null">
        #{creTime,jdbcType=DATE},
      </if>
      <if test="creUser != null">
        #{creUser,jdbcType=VARCHAR},
      </if>
      <if test="modTime != null">
        #{modTime,jdbcType=DATE},
      </if>
      <if test="modUser != null">
        #{modUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.zyyd.base.entity.BasePropertiesExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from base_properties
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update base_properties
    <set>
      <if test="record.pid != null">
        PID = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyKey != null">
        PROPERTY_KEY = #{record.propertyKey,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyValue != null">
        PROPERTY_VALUE = #{record.propertyValue,jdbcType=VARCHAR},
      </if>
      <if test="record.propertyDesc != null">
        PROPERTY_DESC = #{record.propertyDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.groupKey != null">
        GROUP_KEY = #{record.groupKey,jdbcType=VARCHAR},
      </if>
      <if test="record.seqNo != null">
        SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      </if>
      <if test="record.creTime != null">
        CRE_TIME = #{record.creTime,jdbcType=DATE},
      </if>
      <if test="record.creUser != null">
        CRE_USER = #{record.creUser,jdbcType=VARCHAR},
      </if>
      <if test="record.modTime != null">
        MOD_TIME = #{record.modTime,jdbcType=DATE},
      </if>
      <if test="record.modUser != null">
        MOD_USER = #{record.modUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update base_properties
    set PID = #{record.pid,jdbcType=VARCHAR},
      PROPERTY_KEY = #{record.propertyKey,jdbcType=VARCHAR},
      PROPERTY_VALUE = #{record.propertyValue,jdbcType=VARCHAR},
      PROPERTY_DESC = #{record.propertyDesc,jdbcType=VARCHAR},
      GROUP_KEY = #{record.groupKey,jdbcType=VARCHAR},
      SEQ_NO = #{record.seqNo,jdbcType=INTEGER},
      CRE_TIME = #{record.creTime,jdbcType=DATE},
      CRE_USER = #{record.creUser,jdbcType=VARCHAR},
      MOD_TIME = #{record.modTime,jdbcType=DATE},
      MOD_USER = #{record.modUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.zyyd.base.entity.BaseProperties">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update base_properties
    <set>
      <if test="propertyKey != null">
        PROPERTY_KEY = #{propertyKey,jdbcType=VARCHAR},
      </if>
      <if test="propertyValue != null">
        PROPERTY_VALUE = #{propertyValue,jdbcType=VARCHAR},
      </if>
      <if test="propertyDesc != null">
        PROPERTY_DESC = #{propertyDesc,jdbcType=VARCHAR},
      </if>
      <if test="groupKey != null">
        GROUP_KEY = #{groupKey,jdbcType=VARCHAR},
      </if>
      <if test="seqNo != null">
        SEQ_NO = #{seqNo,jdbcType=INTEGER},
      </if>
      <if test="creTime != null">
        CRE_TIME = #{creTime,jdbcType=DATE},
      </if>
      <if test="creUser != null">
        CRE_USER = #{creUser,jdbcType=VARCHAR},
      </if>
      <if test="modTime != null">
        MOD_TIME = #{modTime,jdbcType=DATE},
      </if>
      <if test="modUser != null">
        MOD_USER = #{modUser,jdbcType=VARCHAR},
      </if>
    </set>
    where PID = #{pid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zyyd.base.entity.BaseProperties">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update base_properties
    set PROPERTY_KEY = #{propertyKey,jdbcType=VARCHAR},
      PROPERTY_VALUE = #{propertyValue,jdbcType=VARCHAR},
      PROPERTY_DESC = #{propertyDesc,jdbcType=VARCHAR},
      GROUP_KEY = #{groupKey,jdbcType=VARCHAR},
      SEQ_NO = #{seqNo,jdbcType=INTEGER},
      CRE_TIME = #{creTime,jdbcType=DATE},
      CRE_USER = #{creUser,jdbcType=VARCHAR},
      MOD_TIME = #{modTime,jdbcType=DATE},
      MOD_USER = #{modUser,jdbcType=VARCHAR}
    where PID = #{pid,jdbcType=VARCHAR}
  </update>
</mapper>