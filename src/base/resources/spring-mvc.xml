<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!-- 注解方式   -->
	<mvc:annotation-driven>
        <mvc:path-matching suffix-pattern="false" />
    </mvc:annotation-driven>
    <!-- 只扫描Controller,不扫描Service -->
    <context:component-scan base-package="org.zyyd.*.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>




	<!-- 对静态资源文件的访问 支持访问WEB-INF目录 -->
	<!-- <mvc:resources location="/uikit-2.3.1/" mapping="/uikit-2.3.1/**" />

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean> -->

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" lazy-init="false" >
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
				<!-- json转换器 -->
			</list>
		</property>
	</bean>

    <!-- 对模型视图名称的解析,在请求时模型视图名称添加前后缀-->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />-->
        <property name="viewClass"
                  value="org.zyyd.base.servlet.HtmlResourceView" />
		<!-- 通过setter方法注入前缀 /WEB-INF/views/showMsg.jsp-->
		<property name="prefix" value="/" />
		<!-- 通过setter方法注入后缀 -->
		<property name="suffix" value=".jsp" />

		<property name="order" value="1" />
	</bean>

    <bean id="htmlviewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.zyyd.base.servlet.HtmlResourceView"/>
        <property name="order" value="2" />
        <property name="prefix" value="/"/>
        <property name="suffix" value=".html" />
        <property name="contentType" value="text/html;charset=UTF-8"></property>
    </bean>









	<!-- 对静态资源文件的访问 不支持访问WEB-INF目录 -->
	<mvc:default-servlet-handler />
	<!--这里是对静态资源的映射-->
	<mvc:resources mapping="/js/**" location="/common/js/" />
	<mvc:resources mapping="/css/**" location="/common/css/" />
	<mvc:resources mapping="/img/**" location="/common/img/" />
	<mvc:resources mapping="/common/**" location="/common/" />
	<mvc:resources mapping="/**" location="/" />


	<!--重要！配置swagger资源不被拦截-->
	<!--重要！配置swagger资源不被拦截-->
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="doc.html" location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/v2/**" location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
	<!--重要！将你的SwaggerConfig配置类注入-->

	<bean id="swaggerConfig" class="org.zyyd.base.servlet.Swagger2"/>

	<!-- 支持文件上传
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean> -->

	<!-- <bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> --><!-- json转换器 -->
	<!-- 		</list>
		</property>
	</bean> -->
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="1" />  
        <!--<property name="uploadTempDir" value="/temp/" />-->
    </bean>
    
  <!--  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.163.com"/>
        <property name="port" value="25"/>
        <property name="username" value="pb419995258office@163.com"/>
        <property name="password" value="pb19950516"/>
        <property name="javaMailProperties">
            <props >
                <prop key="mail.smtp.auth">true</prop>
            </props>
        </property>
    </bean>-->
    
    <!--<bean id="mailService" class="com.pb.xc.service.impl.MailService">
		<property name="mailSender" ref="mailSender" />
		<property name="from" value="pb419995258office@163.com"/>
		<property name="subject" value="找回密码" />
	</bean>-->

	<!-- 开启shiro注解 -->
	<bean
			class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
			depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean
			class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 未认证或未授权时跳转必须在springmvc里面配，spring-shiro里的shirofilter配不生效 -->
	<bean
			class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!--表示捕获的异常 -->
				<prop key="org.apache.shiro.authz.UnauthorizedException">
					<!--捕获该异常时跳转的路径 -->
					/error/unauthorized
				</prop>
				<!--表示捕获的异常 -->
				<prop key="org.apache.shiro.authz.UnauthenticatedException">
					<!--捕获该异常时跳转的路径 -->
					/error/unauthorized
				</prop>
			</props>
		</property>
	</bean>


</beans>